# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@1.2

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-package:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
          # app-dir: ~/project/package-directory/  # If you're requirements.txt isn't in the root directory.
          # pip-dependency-file: test-requirements.txt  # if you have a different name for your requirements file, maybe one that combines your runtime and test requirements.

      - run: sudo apt-get update --allow-releaseinfo-change
      - run: sudo apt-get install -y libboost-dev  graphviz
#      - run: sudo curl -L https://github.com/radareorg/radare2/releases/download/5.3.1/radare2-dev_5.3.1_amd64.deb -o /tmp/radare2-dev_5.3.1_amd64.deb
 #     - run: sudo curl -L https://github.com/radareorg/radare2/releases/download/5.3.1/radare2_5.3.1_amd64.deb -o /tmp/radare2_5.3.1_amd64.deb
 #     - run: sudo apt install /tmp/radare2_5.3.1_amd64.deb  /tmp/radare2-dev_5.3.1_amd64.deb
#      - run: python setup.py build
#      - run:
#          name: Run tests
#          command: pip install .; $(set-fiddle-ld-path); env; cd tests; pytest .
      - run: make dist
      - run: mkdir -p /tmp/fiddle/packages/
      - run: cp build_release/dist/*.tar.gz /tmp/fiddle/packages/
      - run: ls -lRa /tmp/fiddle
      - persist_to_workspace:
          root: /tmp/fiddle
          paths:
             - packages/*
    
  python-39: &test-template

    docker:
      - image: cimg/python:3.9

    steps:
      - checkout
      - attach_workspace:
          at: /tmp/fiddle
      - run: ls -lRa /tmp/fiddle
      - run: sudo apt-get update --allow-releaseinfo-change
      - run: sudo apt-get install -y libboost-dev  graphviz
      - run: sudo curl -L https://github.com/radareorg/radare2/releases/download/5.3.1/radare2-dev_5.3.1_amd64.deb -o /tmp/radare2-dev_5.3.1_amd64.deb
      - run: sudo curl -L https://github.com/radareorg/radare2/releases/download/5.3.1/radare2_5.3.1_amd64.deb -o /tmp/radare2_5.3.1_amd64.deb
      - run: sudo apt install /tmp/radare2_5.3.1_amd64.deb  /tmp/radare2-dev_5.3.1_amd64.deb
      - run:
          name: Install fiddle
          command: pip install /tmp/fiddle/packages/*.tar.gz
      - run:
          name: Test fiddle
          command: $(set-fiddle-ld-path); cd tests; pytest .
  python-310:
    <<: *test-template
    docker:
      - image: circleci/python:3.10
  python-38:
    <<: *test-template
    docker:
      - image: circleci/python:3.8
  python-37:
    <<: *test-template
    docker:
      - image: circleci/python:3.7
  python-36:
    <<: *test-template
    docker:
      - image: circleci/python:3.6

      
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
   build-fiddle: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-package
      - python-39:
          requires: 
            - build-package
      - python-310:
          requires: 
            - build-package
      - python-38:
          requires: 
            - build-package
      - python-37:
          requires: 
            - build-package
      - python-36:
          requires: 
            - build-package

